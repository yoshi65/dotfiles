# status

[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]  # カーソル位置のコンテキストに合わせてftを切り替える
depends = ['context_filetype.vim']
repo = 'osyo-manga/vim-precious'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]  # Terraform
hook_add = '''
        let g:terraform_fmt_on_save = 1
'''
on_ft = ['tf', 'terraform', 'hcl']
repo = 'hashivim/vim-terraform'

[[plugins]]
hook_add = '''
	let updatetime = 250
        nmap <C-g>g :GitGutterToggle<CR>
        nmap <C-g>h :GitGutterLineHighlightsToggle<CR>
'''
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
hook_add = '''
        let g:template_basedir = '~/.config'
        let g:template_free_pattern = 'template'
        " テンプレート中に含まれる文字を置き換える
        au MyAutoCmd User plugin-template-loaded call s:template_keywords()
        function! s:template_keywords()
            silent! %s/<+DATE+>/\=strftime('%Y-%m-%d %T %z')/g
            silent! %s/<+FILENAME+>/\=expand('%:r')/g
        endfunction
        " テンプレート中に含まれる'<+CURSOR+>'にカーソルを移動
        au MyAutoCmd User plugin-template-loaded
            \   if search('<+CURSOR+>')
            \ |   silent! execute 'normal! "_da>'
            \ | endif
'''
repo = 'thinca/vim-template'

[[plugins]]  # badwolf
# colorscheme指定
hook_add = '''
	set background=dark
	" colorscheme 設定は source 後に行う必要があるので確実に読まれている VimEnter のタイミングで行う。
	" 但し Colorscheme イベントの発生が抑制されないよう nested を付ける。
        au MyAutoCmd VimEnter * nested colorscheme badwolf
'''
repo = 'sjl/badwolf'

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'

[[plugins]]
hook_source = '''
        " debug
        let g:lsp_log_verbose = 1
        let g:lsp_log_file = expand('~/.cache/dein/vim-lsp.log')

        let g:lsp_signs_error = '⨉'
        let g:lsp_signs_warning = '⚠'

        function! s:configure_lsp() abort
          setlocal omnifunc=lsp#complete   " オムニ補完を有効化
        endfunction
'''
repo = 'prabirshrestha/vim-lsp'

[[plugins]]
repo = 'mattn/vim-lsp-settings'

[[plugins]]
repo = 'vim-denops/denops.vim'

[[plugins]]
hook_source = '''
  call popup_preview#enable()
'''
repo = 'matsui54/denops-popup-preview.vim'

[[plugins]]
hook_source = '''
lua <<EOF
require'nvim-treesitter.configs'.setup {
  highlight = {
    enable = true,
  },
  indent = {
    enable = true
  },
  rainbow = {
    enable = true,
    extended_mode = true,
    max_file_lines = nil,
  }
}
EOF
'''
merged = 0
repo = 'nvim-treesitter/nvim-treesitter'

[[plugins]]
repo = 'romgrk/nvim-treesitter-context'

[[plugins]]
hook_add = '''
  " Show hidden files
  let g:fern#default_hidden=1
'''
repo = 'lambdalisue/fern.vim'

[[plugins]]
depends = ['fern.vim']
repo = 'lambdalisue/fern-git-status.vim'

[[plugins]]
depends = ['fern.vim']
hook_add = '''
  let g:fern#renderer = 'nerdfont'
'''
repo = 'lambdalisue/nerdfont.vim'

[[plugins]]
depends = ['fern.vim', 'nerdfont.vim']
repo = 'lambdalisue/fern-renderer-nerdfont.vim'

[[plugins]]
depends = ['fern.vim', 'fern-renderer-nerdfont.vim']
hook_add = '''
  augroup my-glyph-palette
    autocmd! *
    autocmd FileType fern call glyph_palette#apply()
    autocmd FileType nerdtree,startify call glyph_palette#apply()
  augroup END
'''
repo = 'lambdalisue/glyph-palette.vim'

[[plugins]]
hook_source = '''
lua <<EOF
    local async = require "plenary.async"
EOF
'''
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'nvim-lua/popup.nvim'

[[plugins]]
depends = ['LuaSnip']
hook_source = '''
lua << EOF
  local cmp = require('cmp')
  cmp.setup({
    snippet = {
      expand = function(args)
        require('luasnip').lsp_expand(args.body)
      end,
    },
    mapping = cmp.mapping.preset.insert({
      ['<C-b>'] = cmp.mapping.scroll_docs(-4),
      ['<C-f>'] = cmp.mapping.scroll_docs(4),
      ['<C-Space>'] = cmp.mapping.complete(),
      ['<C-e>'] = cmp.mapping.abort(),
      ['<CR>'] = cmp.mapping.confirm({ select = true }),
      ['<Tab>'] = cmp.mapping.select_next_item(),
      ['<S-Tab>'] = cmp.mapping.select_prev_item(),
    }),
    sources = cmp.config.sources({
      { name = 'nvim_lsp' },
      { name = 'luasnip' },
      { name = 'buffer' },
      { name = 'path' },
    })
  })
EOF
'''
on_event = 'InsertEnter'
repo = 'hrsh7th/nvim-cmp'

[[plugins]]
on_source = 'nvim-cmp'
repo = 'hrsh7th/cmp-nvim-lsp'

[[plugins]]
on_source = 'nvim-cmp'
repo = 'hrsh7th/cmp-buffer'

[[plugins]]
on_source = 'nvim-cmp'
repo = 'hrsh7th/cmp-path'

[[plugins]]
build = 'make install_jsregexp'
repo = 'L3MON4D3/LuaSnip'

[[plugins]]
on_source = 'nvim-cmp'
repo = 'saadparwaiz1/cmp_luasnip'
